自动化测试框架：
    拿着这个框架，往 项目上一套，我只要写用例。其它都有了！！
    1、测试报告
    2、有地儿写用例、运行用例
    3、日志/失败截图
    4、筛选用例/重运行功能

解决问题：
   1）日志？失败截图？
      什么样子的日志：记录用例的执行过程。
      失败截图：用例失败了，在失败的操作截取当前的页面。

      用例当中每一个步骤 === 调页面对象的行为 + 测试数据
                                ||
                              页面对象
                                ||
                        selenium webdriver API
                             日志/失败截图
                                ||
                            1、等待可见 - wait_ele_visible
                            2、查找元素 - get_elment
                            3、点击 - 必然的前提：等待和查找 click_element
                            4、输入 - 必然的前提：等待和查找  input_text
                            5、获取属性 - 必然的前提：等待和查找  get_element_attribute
                            6、获取文本 - 必然的前提：等待和查找   get_element_text

                            每一个函数 - 提供了一个功能。--公共的功能。
                            在PageObjects目录下，被多个页面对象调用。
                            关键字：已经实现的功能。你只需要负责用。干啥都是调用关键字。
                            现在的功能，具备通用性，可以直接使用。

   2）优化pageobjects的行为封装 - 简化代码

   basepage 二次封装
   对谁进行二次封装？ - selenium webdriver API?


   )basepage:
   1) 创建一个basepage.py  实现BasePage类。
      loc代表元素定位，img_name代表业务操作
      6大方法是什么？
      如何实现日志/异常截图？
   2）测试basepage类。
   3）测试通过之后，更新PageObjects目录下的页面对象行为。 ---先修改登陆用例涉及到的页面。
   4）运行登陆用例，确保运行成功。
   5）看看日志生成了吗，截图生成了吗
